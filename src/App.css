.charm-button {
  --size: 4rem;
  width: var(--size);
  height: var(--size);
  pointer-events: all;
  transition: transform 0.2s ease-in-out;
  transform-origin: center center;
  animation: scaleIn 0.15s ease-in-out;
  & img {
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  background: transparent;
  cursor: move;
  border-radius: 50%;
  padding: 0.5rem;
  &:hover {
    background: rgba(0, 0, 0, 0.1);
  }
  &[data-overcharmed="true"] {
    animation: overcharmedIconAnimation 1.5s ease-in-out infinite;
    animation-delay: calc(0.1s * var(--charm-index));
  }
}

@keyframes overcharmedIconAnimation {
  0% {
    transform: translateX(0);
  }
  8% {
    transform: rotate(2deg) scale(0.99);
  }
  13% {
    transform: rotate(-1deg);
  }
  18% {
    transform: rotate(-3deg) scale(0.99);
  }
  22% {
    transform: translateX(2px) rotate(-3deg) scale(1.01);
  }
  25% {
    transform: translateX(2px) rotate(-2deg) scale(1.01);
  }
  25% {
    transform: translateX(2px) rotate(3deg) scale(1.01);
  }
  30% {
    transform: translateX(2px) rotate(0deg);
  }
  32% {
    transform: rotate(3deg);
  }
  35% {
    transform: rotate(-3deg);
  }
  37% {
    transform: rotate(3deg);
  }
  40% {
    transform: rotate(-3deg);
  }
  42% {
    transform: translateX(1px) rotate(1deg);
  }
  45% {
    transform: translateX(-2px);
  }
  50% {
    transform: translateX(-1px);
  }
  52% {
    transform: rotate(-1deg);
  }
  55% {
    transform: translateX(-2px) scale(1.03) rotate(4deg);
  }
  57% {
    transform: rotate(-1deg);
  }
  60% {
    transform: rotate(-4deg);
  }
  62% {
    transform: rotate(4deg);
  }
  64% {
    transform: rotate(-2deg);
  }
  75% {
    transform: translateX(2px) rotate(-3deg);
  }
  80% {
    transform: rotate(1deg);
  }
  85% {
    transform: rotate(-1deg);
  }
  90% {
    transform: rotate(3deg);
  }
  92% {
    transform: rotate(-3deg);
  }
  95% {
    transform: rotate(1deg);
  }
  96% {
    transform: rotate(-deg);
  }
  97% {
    transform: rotate(1deg);
  }
  98% {
    transform: rotate(-deg);
  }
  100% {
    transform: translateX(0) rotate(2deg);
  }
}

.charm-button:nth-child(20n + 11),
.charm-button:nth-child(20n + 12),
.charm-button:nth-child(20n + 13),
.charm-button:nth-child(20n + 14),
.charm-button:nth-child(20n + 15),
.charm-button:nth-child(20n + 16),
.charm-button:nth-child(20n + 17),
.charm-button:nth-child(20n + 18),
.charm-button:nth-child(20n + 19),
.charm-button:nth-child(20n + 20) {
  transform: translateX(2.5rem);
}

@keyframes appIn {
  from {
    opacity: 0;
  }
}

.section {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  & button {
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;

    & svg {
      width: 0.75em;
      height: 0.75em;
      opacity: 0.75;
      transition: transform 0.2s ease-in-out;
    }

    &.collapsed svg {
      transform: rotate(180deg);
    }
  }

  & .section-inner {
    animation: fadeInDown 0.15s ease-in-out;
  }
}

@keyframes fadeInDown {
  0% {
    transform: translateY(-1rem);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

:root {
  --charms-container-width: 640px;
}

.charms-container {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  max-width: 100%;
  transform: translateX(-1rem);
  user-select: none;
  width: 100%;
}

.charm-dot-empty-space {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background: transparent;
  border: 2px dashed #111;
  box-shadow: 0 0 0 3px #000;
  filter: blur(1px);
  margin-left: 0.5rem;
}

@keyframes overcharmedAnim {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.dropzone {
  min-height: 4rem;
  display: flex;
  align-items: center;
  gap: 0rem;

  &.overcharmed {
    background: linear-gradient(255deg, #cd21ff24, transparent);
    background-size: 400% 400%;
    animation: overcharmedAnim 3s ease infinite;
  }

  &.rejecting {
    animation: reject 0.5s ease-in-out;
  }

  &.not-allowed:hover {
    cursor: not-allowed;
  }

  &.dragging:hover {
    outline: 2px dotted rgba(255, 255, 255, 0.2);
  }
}

.notches {
  display: flex;
  gap: 0.75rem;
  padding: 0 0.5rem;
}

.charm-dot {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background: #ddd;
  box-shadow: 0 0 0 3px #fff;
  filter: blur(1px);
  &.overcharm {
    background: #9d52d5;
    box-shadow: 0 0 0 3px #b54ab5;
  }

  &.empty {
    opacity: 0.25;
  }
}

label:has(input[type="checkbox"]) {
  display: inline-block;
  cursor: pointer;
  padding: 0.25rem;
  display: flex;
  gap: 0.25rem;

  &:hover {
    background: rgba(0, 0, 0, 0.25);
  }

  &::before {
    content: "x";
    display: inline-block;
    width: 0.75rem;
    opacity: 0.75;
  }
}

label:has(input[type="checkbox"]:checked)::before {
  content: "âœ“";
}

.more-info {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  cursor: pointer;
  & svg {
    width: 0.875em;
    height: 0.875em;
  }
}

@keyframes scaleIn {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleInCursor {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.5;
  }
}

@keyframes overcharmed {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes reject {
  0% {
    transform: translateX(-3px);
  }
  25% {
    transform: translateX(3px);
  }
  50% {
    transform: translateX(-3px);
  }
  75% {
    transform: translateX(2px);
  }
}

#app {
  padding: 3rem 2rem;
  animation: appIn 0.6s ease-in-out;
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--charms-container-width), 1fr)
  );
  gap: 4rem;
}

.subgrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(600px, 1fr));
  gap: 2rem;
}

.stack {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

h3 {
  font-size: 1.25rem;
  font-weight: bold;
}

.charm-info {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  align-items: center;
  max-width: 50ch;
  margin-bottom: 0.5rem;

  & img,
  & .img {
    width: 1.9rem;
    height: 2rem;
    filter: brightness(0.5);
  }

  & .charm-description {
    opacity: 0.65;
    font-size: 0.875rem;
  }

  & header {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  & .charm-cost {
    display: flex;
    margin: 0.5rem 0;
    gap: 0.5rem;
    opacity: 0.3;

    & div {
      width: 0.25rem;
      height: 0.25rem;
    }
  }
}

.synergies {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-left: 2.5rem;

  & h3 {
    font-size: 1rem;
    font-weight: bold;
  }
  & p {
    opacity: 0.75;
    font-size: 0.875rem;
  }
}

.charm-info h3 {
  font-size: 1rem;
  font-weight: bold;
}

@media screen and (max-width: 920px) {
  .charm-button {
    --size: 3rem;
    padding: 0.5rem;
  }
}

.popper {
  background: #111;
  padding: 1rem;
  max-width: 400px;
}

@media screen and (max-width: 770px) {
  .charms-container {
    grid-template-columns: repeat(5, 6rem);
  }

  .charm-button:nth-child(20n + 11),
  .charm-button:nth-child(20n + 12),
  .charm-button:nth-child(20n + 13),
  .charm-button:nth-child(20n + 14),
  .charm-button:nth-child(20n + 15),
  .charm-button:nth-child(20n + 16),
  .charm-button:nth-child(20n + 17),
  .charm-button:nth-child(20n + 18),
  .charm-button:nth-child(20n + 19),
  .charm-button:nth-child(20n + 20) {
    transform: translateX(0);
  }

  .charm-button:nth-child(10n + 6),
  .charm-button:nth-child(10n + 7),
  .charm-button:nth-child(10n + 8),
  .charm-button:nth-child(10n + 9),
  .charm-button:nth-child(10n + 10) {
    transform: translateX(3.5rem);
  }
  .charm-button {
    --size: 4rem;
    flex-shrink: 1;
    padding: 0.25rem;
  }
  #app {
    grid-template-columns: 1fr;
  }
}

@media screen and (max-width: 600px) {
  .charm-button {
    --size: 2rem;
  }

  .charm-button:nth-child(10n + 6),
  .charm-button:nth-child(10n + 7),
  .charm-button:nth-child(10n + 8),
  .charm-button:nth-child(10n + 9),
  .charm-button:nth-child(10n + 10) {
    transform: translateX(3rem);
  }

  .subgrid {
    grid-template-columns: 1fr;
  }
}
@media screen and (max-width: 550px) {
  .charms-container {
    grid-template-columns: repeat(5, 5rem);
  }

  .charm-button:nth-child(10n + 6),
  .charm-button:nth-child(10n + 7),
  .charm-button:nth-child(10n + 8),
  .charm-button:nth-child(10n + 9),
  .charm-button:nth-child(10n + 10) {
    transform: translateX(2.5rem);
  }
}

.settings-container {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  padding-left: 1rem;

  & label {
    opacity: 0.75;
    font-size: 0.875rem;
  }
}
